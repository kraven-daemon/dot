#!/usr/bin/env sh

# this is a simple config for herbstluftwm

hc() {
    herbstclient "$@"
}

hc emit_hook reload

# reset wm data : keybinding, mousebinding, rules, theme
# some artifacts are staying upon restart
hc keyunbind --all
hc mouseunbind --all
hc unrule -F
hc attr theme.reset 1

# keybindings
Mod=Super
hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-q close
hc keybind $Mod-Return spawn alacritty
hc keybind $Mod-p spawn rofi -show run
hc keybind $Mod+Menu spawn rofi -modi drun -show drun

hc keybind Print spawn scrot --select
hc keybind $Mod-e spawn emote

# volume stuff
# hc keybind XF86AudioLowerVolume spawn volume --down
# hc keybind XF86AudioRaiseVolume spawn volume --up
# hc keybind XF86AudioMute spawn volume --mute

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-Left focus left
hc keybind $Mod-Down focus down
hc keybind $Mod-Up focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h focus left
hc keybind $Mod-j focus down
hc keybind $Mod-k focus up
hc keybind $Mod-l focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-Left shift left
hc keybind $Mod-Shift-Down shift down
hc keybind $Mod-Shift-Up shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h shift left
hc keybind $Mod-Shift-j shift down
hc keybind $Mod-Shift-k shift up
hc keybind $Mod-Shift-l shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u split bottom 0.5
hc keybind $Mod-o split right 0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h resize left +$resizestep
hc keybind $Mod-Control-j resize down +$resizestep
hc keybind $Mod-Control-k resize up +$resizestep
hc keybind $Mod-Control-l resize right +$resizestep
hc keybind $Mod-Control-Left resize left +$resizestep
hc keybind $Mod-Control-Down resize down +$resizestep
hc keybind $Mod-Control-Up resize up +$resizestep
hc keybind $Mod-Control-Right resize right +$resizestep

# bind a tag to a key
tagTOkey() {
    hc keybind "$Mod-$1" use "$2"
    hc keybind "$Mod-Shift-$1" move "$2"
}

# Matching the keyboard leftside numbers, starting at 1
# with the workspaces starting at 0,
# ...recycling the 0 workspace for later
hc rename default 1
tagTOkey 1 1
for t in $(seq 2 5)
do
    hc add "$t"
    tagTOkey "$t" "$t"
done



# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-Shift-s floating toggle
hc keybind $Mod-s set_attr clients.focus.floating toggle
hc keybind $Mod-m set_attr clients.focus.minimized true
hc keybind $Mod-i pseudotile toggle
hc keybind $Mod-Shift-m jumpto last-minimized
hc keybind $Mod-f fullscreen toggle

# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1

# theme

# copy inner color to outer_color
# for state in active urgent normal ; do
#     hc substitute C theme.${state}.inner_color \
#         attr theme.${state}.outer_color C
# done

# theme.active.            theme.inner_color        theme.padding_bottom     theme.tiling.
# theme.background_color   theme.inner_width        theme.padding_left       theme.title_color
# theme.border_width       theme.minimal.           theme.padding_right      theme.title_font
# theme.color              theme.normal.            theme.padding_top        theme.title_height
# theme.floating.          theme.outer_color        theme.reset              theme.urgent.
# theme.fullscreen.        theme.outer_width        theme.tight_decoration

hc attr settings.frame_bg_transparent true
hc attr settings.frame_border_width 3
hc attr settings.frame_border_active_color '#ffaa00'
hc attr settings.frame_border_normal_color '#004321'
hc attr settings.frame_gap 5
hc attr settings.window_border_width 1
hc attr settings.window_border_active_color '#feaa00'
hc attr settings.default_frame_layout = 'horizontal'

#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
hc rule floatplacement=smart
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
hc rule class="Yad" floating=true floatplacement=center
hc rule class="feh" floating=true floatplacement=center
hc rule class="Gcr-prompter" floating=true floatplacement=center
hc rule class="Emote" floating=true floatplacement=center

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# if second monitor is on,
# add it with a new tag and lock it

# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or
hc detect_monitors
#MTAG="DP-3"
#hc add $MTAG
#hc keybind "$Mod-0" use $MTAG
#hc keybind "$Mod-Shift-0" move $MTAG
#hc add_monitor 1920x1080+1920+0 $MTAG "side"
#hc lock_tag "side" $MTAG

#panels


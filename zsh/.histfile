apt search neomutt
cl
nix-env -qa | grep neomutt
nix-env -i neomutt
mutt
neomutt
man neomutt
echo $EDITOR
env
cl
vi .profile
ls
exit
echo $EDITOR
$EDITOR
$($EDITOR)
./$EDITOR
$EDITOR
cl
neomutt
man neomutt
apt search mailtrap
apt search gmail
cl
exit
ncursesw6-config --
ncursesw6-config --mouse-version
ncursesw6-config --bindir
ncursesw6-config --libdir
ncursesw6-config --datadir
ncursesw6-config --terminfo
ncursesw6-config --termpath
ncursesw6-config --libs
ncursesw6-config --prefix
ncursesw6-config --exec-prefix
ncursesw6-config --libs-only-L
ncursesw6-config --libs-only-l
cl
man ncursesw6-config
cl
exit
exit
nix-env --
nix-env --help
nix --help
nix verify
nix show-config
cl
nix-env -q
ls .nix-profile/bin
ls .nix-profile/share
cl
exit
exit
exit
exit
vi .zshenv
exit
clear
cd ../nixb-ex/
ls
ll
bat some.nix
nix repl
bat some.nix
nix repl
cl
nix search elfutils
nix search gdb
nix search ltrace
ltrace --help
memstomp
nix search valgrind
nix search -u
fold --help
stat 
stat .
stat ../
printenv
clear
ls
bat default.nix
bat builder.sh
ls
rm builder.sh
cat default.nix
ls
cd nixstuff
ls
cat default.nix
ls
cat list.nix
nix repl
cl
ls
cat default.nix
cd ..
ls
cat some.nix
rm some.nix
cat default.nix
la
ls
nix repl
cl
ls
cd hellognu
ls
cat hello
cat hello.nix
ls
cat hello_builder.sh
vi 
nix-build hello.nix
cl
shuf
man shuf
shuf "balbalba"
shuf <<<here
shuf <<<HERE
ma ntr
man tr
echo "wtf is this" | tr 
echo "wtf is this" | tr [:upper:]
echo "wtf is this" | tr '[:upper:]'
echo "wtf is this" | tr '[:upper:]' -
echo "wtf is this" | tr [:upper:] -
echo "wtf is this" | tr :upper: -
echo "wtf is this" | tr - :upper:
echo "wtf is this" | tr :upper: - hello
echo "wtf is this" | tr :upper: - "hello"
tr aaa zzz
exit
clera
cl
systemctl status 
systemctl status | grep failed
systemctl status dbus
cl
ls -all
ls
exit
feh Pictures/Screenshot\ from\ 2021-07-22\ 15-55-26.png
feh Pictures
exit
cl
ls -all
cat .zshenv
source .aliases
cl
npm -v
whereis npm
cl
man dmenu
dmenu -l 10
dmenu_run -l 10
feh --bg-fill Pictures/Screenshot\ from\ 2021-07-23\ 10-17-06.png
ls -all
ls
cl
source .aliases
ls
la
ll
cl
la
l.
la
ll
touch .xsession .xinitrc
vi .xsession
vi .xsession
vi .xinitrc
exit
ls /usr/share/backgrounds/
ls /usr/share/backgrounds/pop/
exit
cat .bashrc
lua
luarocks path
la
fzf
fzf 
cd .config/
fzf
cd zsh
ls
la
vi .zshrc
exit
t
exit
whereis rust-analyser
nix
nix-env -iA nixpkgsu.rust-analyser
nix search rustanalyser
nix search rust
nix search rust | grep anal
nix-env -iA nixpkgsu.rust-analyser
nix-env -iA nixpkgsu.rust-analyzer
cl
exit
apt search Xext
apt search Xcomposite
apt search Xrender
cl
cd Desktop
ls
cd glava
meson build --prefix /usr
ninja -C build
ninja -c build
meson build --prefix /usr
meson setup --wipe
meson --reconfigure
meson --reconfigure /usr
meson --reconfigure .
ls
meson --reconfigure build/
ninja -C build
clear
cd ..
git clone https://github.com/jarcode-foss/glava
sudo apt-get install libgl1-mesa-dev libpulse0 libpulse-dev libxext6 libxext-dev libxrender-dev\

sudo apt install libxcomposite-dev liblua5.3-dev liblua5.3 lua-lgi lua-filesystem libobs0 libobs-dev meson
sudo apt install libxcomposite-dev liblua5.3-dev
sudo apt install liblua5.3
sudo apt search liblua5.3
sudo apt install lua-lgi lua-filesystem libobs0 libobs-dev meson
cl
ldconfig
sudo ldconfig
clear
rm -rf glava
git clone https://github.com/jarcode-foss/glava
cd glava
meson build --prefix /usr
ninja -C build
cd ..
rm -rf glava
cl
exit
gpicck
cdc
ls
cd nvim
ls
ctags init.lua
fzf
fzf
ls *.lua
ls /*.lua 
ls lua/*.lua
ctags -R .lua
ctags -R .*.lua
ctags -R .
clear
gpick
gpick
cd
ls
ls Downloads
ls Pictures
feh Downloads
feh Pictures/chucky\'s
cd Desktop
la
ls nvim-remote-pod
cat nvim-remote-pod/launch.sh
cat nvim-remote-pod/launch.sh
rm -r nvim-remote-pod
ls obs-stuff
ls touch
ls touch/src
cat touch/src/main.rs
rm -r touch
la
ls cli-visualizer
la
mv ~/Pictures/chucky\'s chuckys
mv ~/Downloads/chucky-pallet.jpg ./chuckys
mv ~/Downloads/seed-chucky-social.jpg ./chuckys
cl
ls
ls deno
ls bevy
rm -rf avatarify-python
ls
ls
ls glava
glava
ls
cd../..
cd..
cd ../..
glava
cd Desktop/glava
ls
bat README.md
cl
la
cd..
cd ..
la
ll
l
ls dockerfiles
mkdir myrepos
mv kraven-daemon.github.io myrepos
ls neovim-stuff
ls neovim-stuff/chucky
ls neovim-stuff/chucky/lua
ls neovim-stuff/chucky/lua/lush_theme
ls neovim
ls neovim/runtime
rm -rf neovim
ls
ls haskell
mv lyahfg haskell
la
ls neovim-stuff
ls neovim-stuff/neovim-docker/
cat neovim-stuff/neovim-docker/init.lua
cl
cdc
ls
rm -rf rofi
ls
cd nvim
la
cd ..
ls
cd ..
la
exit
exit
fzf
man fzf
cl
git config user.name
git config user
git config user.email
git config user.signingkey
git config user.useConfigOnly
git config alias.
git config alias
cd Desktop
ls
git clone git@github.com:rktjmp/lush-template.git chucky-theme
cd chucky-theme
ls
command -v sed 
command -v asjdnbakjsd
command -v asjdnbakjsd &>1
command -v asjdnbakjsd &>2
command -v asjdnbakjsd 2&>1
ls
cat 1
cat 2
rm 1 2
ls
la colors
cat colors/lush_template.vim
ls
ls ~/.config
ls ~/.confignvim
ls ~/.config/nvim
ls lua
vi
vi
ls
vi README.md
cl
vi
ls
sh << "EOF"\
  git reset --soft 9069669\
  git add .\
  git commit --amend --no-edit\
  LUSH_NAME=$(basename $(pwd))\
  GIT_NAME=$(git config user.name)\
  YEAR=$(date +"%Y")\
  mv colors/lush_template.vim colors/$LUSH_NAME.vim\
  mv lua/lush_theme/lush_template.lua lua/lush_theme/$LUSH_NAME.lua\
  if command -v sed &> /dev/null; then\
    sed -i "s/lush_template/$LUSH_NAME/g" colors/$LUSH_NAME.vim\
    sed -i "s/COPYRIGHT_NAME/$GIT_NAME/g" LICENSE\
    sed -i "s/COPYRIGHT_YEAR/$YEAR/g" LICENSE\
    git add .\
    git commit -m "Configure template for $LUSH_NAME, please enjoy using Lush!"\
  else\
    echo "Could not find sed, please manually replace 'lush_template' with '$LUSH_NAME' in colors/$LUSH_NAME.vim, and update the LICENCE file."\
  fi\
EOF\

ls
la
cd lua
ls
ls lush_theme
cd ..
la
mv colors ../dot/nvim/
mv lua/lush_theme ../dot/nvim/lua
clear
cd ..
cdc
cd nvim
la
vi
vi plugin
vi init.lua
vi init.lua
clear
vi
vi
vi
vi
vi
vi
vi
vi
vi
vi --help
vi
cl
vi
la
head hls
cat hls | awk '{print $1}'
cat hls | awk '{print $1}' > hls
vi hls
vi
clear
ls
rm hls
rm high
l
vi allhl
cl
vi
clear
exit
vi
exit
sudo apt update
sudo apt upgrade
exit
exit
cl
cl
neofetch
clear
ls
exit
cdc
cl
la
bat install.sh
./install.sh
la
./truecolors.sh
./truecolors.sh
./install.sh
cl
ls
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
shellcheck install.sh
vi install.sh
shellcheck install.sh
vi install.sh
shellcheck install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
unset XDG_CONFIG_HOME
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
shellcheck install.sh
checkbashisms
checkbashisms install.sh
vi install.sh
checkbashisms install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
ls /dev/tcp
ls /dev/tcp
ls /dev/udp
man /dev/upd
ls /dev
ls /dev | grep ud
ls /dev | grep tc
cl
ls
vi install.sh
ls
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
exit
ls
la
cl
la
ll
ll
cl
tmux
cd Desktop
cd dot
ls
ls
la
la
ll
ls -all
ll
l.
fzf /
cd /
zfz
fzf
bat /usr/share/doc/tmux/example_tmux.conf
man test
fmt --help
man return
man bash
cl
mman bash
man bash
cdc
ins
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
unset XDG_CONFIG_HOME
./install.sh
vi install.sh
./install.sh
vi install.sh
./install.sh
exit
lS
la
la
ll
la
lsd -A
lsd -Al
vi .aliases
ls
la
source .aliases
la
ll
ll
la
l.
ls -all
cl
la
cl
exit
clear
cd ..
exit
exit
cl
source .zshenv
cl
man tmux
cdc
./insta
./install.sh
jq -r "keys[0]"
jq -r "keys[0]" files.json
jq -r "keys[@]" files.json
jq -r "keys[3]" files.json
jq -r "keys[3]" files.json
jq -r "keys[2]" files.json
jq -r "keys[0]" files.json
la
./truecolors.sh
cat .xprofile
cat .xinitrc
la ~/.xinitrc
cat ~/.xinitrc
ls
la
ls ~/.local/bin
cat ~/.local/bin/flask
cd
cd .local/bin
ls
./flask
./flask shell
cl
printf "%10s :" "hello\
"
printf "%10s :" "hello"\

printf "%10s :" "hello"
printf "%10s :\n" "hello"
printf "%-10s :\n" "hello"
printf "%4s%-10s :\n" "hello"
printf "%4s%-10s :\n" ' ' "hello"
printf "%4s%-10s :\n" "" "hello"
printf "%4s%-10s :\n" "" "hello"
la
cat gdbgui
nix-env -q
ls /usr/
/usr/local
ls /usr/local
ls /usr/local/bin
ll
ll /usr/local/bin
nix search vscode-langservers
nix search vscode
nix search vscode-lang
nix search -u vscode-lang
clear
nix search neovim
nix-env -iA nixpkgsu.nvimpager
pager --help
man pager
cl
ls
ls /etc
ls etc
ls lib
la lua
la lib/lua
la lib/luarocks
la lib/luarocks/rocks
la lib/lua
la lib/lua/5.1
ll
la
la bin
la
ls lib
ls include
la include
la sbin
la share
tree share
tree -r share
ls
ls src
ls src
la src
la games
la bin
/usr/bin
ls /usr/bin
ll
la
la | less
la | nvim
jobs
kill %1
jobs
cl
cdc
ls
cd
ls .local
tree .local
ls
ls
cl
exit\\

./install.sh
./install.sh
exit
exit
source .aliases
cl
echo "${XDG_CONFIG_HOME}"
echo "${XDG_CONFIG_HOME}/"
cl
man test
cdc
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
printf "bla\e[1;31m blabla"
printf "bla\e[1;31mblabla\e[0m blbabl\n"
./install.sh
sh
./install.sh
./install.sh
cl
./install.sh
./install.sh
./install.sh
la
mv files.json list.json
./install.sh
./install.sh
mv list.json a.json
./install.sh
mv a.json list.json
cl
cl
la
cl
la
./install.sh
bat list.json
cl
cl
echo $XDG_DATA_HOME
ls .local
ls ~/.local
ls /lib
ls ~/.local/lib
ls ~/.local/lib/python3.9
ls ~/.local/lib/python3.9/site-packages
ls ~/.local/lib/python3.9/site-packages/itsdangerous
ls ~/.local/lib/python3.9/site-packages/itsdangerous/_json.py
bat ~/.local/lib/python3.9/site-packages/itsdangerous/_json.py
cl
./install.sh
./install.sh
./install.sh
./install.sh
ll
ls
la
ls ~/.local/share
ls ~/.local/share/backgrounds
feh ~/.local/share/backgrounds
./install.sh
cl
sh
cl
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
cl
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
shellcheck install.sh
./install.sh
shellcheck install.sh
shellcheck install.sh
shellcheck install.sh
shellcheck install.sh
shellcheck install.sh
shellcheck install.sh
shellcheck install.sh
shellcheck install.sh
./install.sh
./install.sh
shellcheck install.sh
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
shellcheck install.sh
shellcheck install.sh
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
printf -e "as"
printf \e
printf \033
printf \033[31m asdasd
printf \033[00;31m asdasd
printf '\033[00;31m asdasd'
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
./install.sh
shellcheck install.sh
shellcheck install.sh
checkbashisms install.sh
cl
shellcheck install.sh
./install.sh
printf "blabla \vblabla"
cl
ll
./truecolors.sh
ls ~/.local/share
cd
cd .local/share
ls
ls backgrounds
ls icaons
ls icons
ls fonts
ls nvim
ls nvim/runtime
ls nvim/runtime
ls nvim/runtime/plugin
ls nvim/runtime/lua
ls nvim/runtime/lua/vim
ls nvim
ls
la
ls sounds
la sounds
echo $XDG_DATA_DIRS
echo $XDG_DATA_DIRS | sed 's/:/\n/g'
ls /usr/share/sounds/
ls /usr/share/sounds/alsa
exit
source .zshenv
cl
cd
source .zshenv
cl
youtube-dl --help
youtube-dl --help | less
exit
cd
cd Downloads
la
cd wx-build
la
cmake --build .
la
cat wx-config
cl
cd
cd Desktop
la
cd tenacity
la
ls build
export WX_CONFIG=/home/kraven/Downloads/wx-build/wx-config
echo $WX_CONFIG
cmake -G Ninja -S . -B build
cmake --build build\

ls
ls build/bin/Debug/tenacity
./build/bin/Debug/tenacity
clear
exit
systemctl status
systemctl reset-failed
systemctl status
clear
exit
clear
clear
gnome-tweaks
exit
apt search libcanberra
clear
gsettings --help
gsettings get org.gnome.desktop.sound
apt search gsound
sudo apt install gsound-tools
cl
gsettings get org.gnome.desktop.sound
gsettings get org.gnome.desktop.sound get SCHEMA
gsettings get org.gnome.desktop.sound PATH
gsettings get org.gnome.desktop.sound SCHEMADIR
gsettings get org.gnome.desktop.sound $SCHEMADIR
gsettings get org.gnome.desktop.sound 1
gsettings get org.gnome.desktop.sound --help
gsettings get org.gnome.desktop.sound exit
exit
apt search libcanberra-gtk
exit
apt search gnome-session-canberra
sudo apt install gnome-session-canberra
cl
canberra
canberra-gtk-play
canberra-gtk-play --help
canberra-gtk-play -i
canberra-gtk-play -f /home/kraven/Music/coin.ogg
canberra-gtk-play -f /home/kraven/Music/death.ogg
canberra-gtk-play -f /home/kraven/Music/swing.ogg
canberra-gtk-play -f /home/kraven/Music/1up.ogg
canberra-gtk-play -f /home/kraven/Music/Hitman1-Codename47Soundtrack.opus
canberra-gtk-play -f /home/kraven/Music/mush.ogg
clear
exit
cdc
ls
mkdir bin
cd bin
touch sounds.sh
vi sounds.sh
exit
